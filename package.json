{
  "name": "com.unity.dt.app-ui",
  "displayName": "App UI",
  "version": "1.0.0-pre.12",
  "unity": "2021.3",
  "category": "UI",
  "keywords": [
    "app",
    "ui",
    "components",
    "runtime",
    "framework",
    "navigation",
    "dependency-injection",
    "mvvm",
    "undostack",
    "redux",
    "state-management",
    "dark-theme",
    "data-binding",
    "cloud",
    "unity",
    "app-ui"
  ],
  "repository": {
    "url": "https://github.com/Unity-Technologies/unity-app-ui.git",
    "type": "git",
    "revision": "25bb197318ef2ce0fe7725a8025b6d1543f07b71"
  },
  "description": "App UI is a versatile and customizable UI library for Unity that provides essential building blocks for creating beautiful and responsive user interfaces. With support for MVVM architecture, state management, and localization, App UI simplifies app development while maintaining flexibility and extensibility. The library includes a wide range of UI components, design tokens, and symbols, all of which can be easily customized to fit your app's unique style and branding.",
  "dependencies": {
    "com.unity.modules.androidjni": "1.0.0",
    "com.unity.modules.uielements": "1.0.0",
    "com.unity.modules.physics": "1.0.0",
    "com.unity.modules.screencapture": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Drag And Drop",
      "description": "Example of drag and drop system using App UI DropZone component and Dragger/DropTarget manipulators",
      "path": "Samples~/Drag And Drop"
    },
    {
      "displayName": "UI Kit",
      "description": "Every component in a single page",
      "path": "Samples~/UI Kit"
    },
    {
      "displayName": "StoryBook",
      "description": "StoryBookJS-like window in the Editor",
      "path": "Samples~/StoryBook"
    },
    {
      "displayName": "Navigation",
      "description": "Navigation system",
      "path": "Samples~/Navigation"
    },
    {
      "displayName": "MVVM",
      "description": "Example that showcases the MVVM pattern with dependency injection",
      "path": "Samples~/MVVM"
    },
    {
      "displayName": "Redux",
      "description": "Example of state management with Redux",
      "path": "Samples~/Redux"
    },
    {
      "displayName": "MVVM And Redux",
      "description": "Example that showcases the MVVM pattern with dependency injection and state management with Redux",
      "path": "Samples~/MVVM And Redux"
    },
    {
      "displayName": "UndoRedo",
      "description": "Example of undo/redo system",
      "path": "Samples~/UndoRedo"
    },
    {
      "displayName": "Trackpad",
      "description": "Example of Trackpad gesture recognition",
      "path": "Samples~/Trackpad"
    }
  ],
  "_upm": {
    "changelog": "### Changed\n\n- Color related components, such as `ColorSlider` or `ColorSwatch`, support now a value of type `UnityEngine.Gradient` instead of `UnityEngine.Color` for more flexibility.\n- Removed the `disabled` boolean property on App UI components from the public C# API. The `disabled` attribute in UXML has been replaced by `enabled` UXML attribute. This change has been made in order to be more consistent with Unity 2023.3, where `enabled` UXML attribute is provided by UI Toolkit on any VisualElement.\n- Replaced `Nullable<T>` properties in components by a custom serializable implementation called `Optional<T>`\n- Renamed `Panel.dir` property with `Panel.layoutDirection`.\n- Replaced the `Divider.vertical` property by `Divider.direction` enum property.\n- Removed the `ApplicationContext` class and `VisualElementExtensions.GetContext()` method, replaced by the ne `ProvideContext` and `RegisterContextChangedCallback` API.\n- Replaced `ActionGroup.vertical` property by `ActionGroup.direction` enum property.\n\n### Added\n\n- Added support of new UI Toolkit Runtime Bindings feature through bindable properties in each App UI components. More than 420 properties can now be bound (2023.2+).\n- Added support to new UI Toolkit Uxml Serialization using source code generators.\n- Added `BaseVisualElement` and `BaseTextElement` classes which are used as base class for mostly every App UI component\n- Added numerous custom PropertyDrawers for a better experience in UIBuilder (2023.3+)\n- Added the support of `Fixed` gradient blend mode in ColorSwatch shader.\n- Added `.appui-row` USS classes which support current layout direction context.\n\n### Removed\n\n- Starting Unity 2023.3, App UI will not provide any `UxmlFactory` or `UxmlTraits` implementation, as they become obsolete and replaced by the new UITK Uxml serialization system.\n\n### Fixed\n\n- Fixed Sliders handles to not exceed the range of track element.\n- Fixed color blending in the ColorSwatch custom shader.\n- Fixed `AppBar` story in Storybook samples.\n- Fixed some styling issues on different components.\n- Cleaned up some warning messages to not get anything written in the console during package installation.\n- Fixed small errors in UI Kit sample.\n- Fixed a refresh bug in the App UI Storybook window."
  },
  "upmCi": {
    "footprint": "bbe98fae72622790f0bb66ad5a83103196fafc88"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.dt.app-ui@1.0/manual/index.html"
}
