{
  "name": "com.unity.dt.app-ui",
  "displayName": "App UI",
  "version": "1.0.0-pre.15",
  "unity": "2021.3",
  "category": "UI",
  "keywords": [
    "app",
    "ui",
    "components",
    "runtime",
    "framework",
    "navigation",
    "dependency-injection",
    "mvvm",
    "undostack",
    "redux",
    "state-management",
    "dark-theme",
    "data-binding",
    "cloud",
    "unity",
    "app-ui"
  ],
  "repository": {
    "url": "https://github.com/Unity-Technologies/unity-app-ui.git",
    "type": "git",
    "revision": "fb920d457fc3970f350e80838dda2a8eca51ef5d"
  },
  "description": "App UI is a versatile and customizable UI library for Unity that provides essential building blocks for creating beautiful and responsive user interfaces. With support for MVVM architecture, state management, and localization, App UI simplifies app development while maintaining flexibility and extensibility. The library includes a wide range of UI components, design tokens, and symbols, all of which can be easily customized to fit your app's unique style and branding.",
  "dependencies": {
    "com.unity.modules.androidjni": "1.0.0",
    "com.unity.modules.uielements": "1.0.0",
    "com.unity.modules.physics": "1.0.0",
    "com.unity.modules.screencapture": "1.0.0"
  },
  "samples": [
    {
      "displayName": "Drag And Drop",
      "description": "Example of drag and drop system using App UI DropZone component and Dragger/DropTarget manipulators",
      "path": "Samples~/Drag And Drop"
    },
    {
      "displayName": "UI Kit",
      "description": "Every component in a single page",
      "path": "Samples~/UI Kit"
    },
    {
      "displayName": "StoryBook",
      "description": "StoryBookJS-like window in the Editor",
      "path": "Samples~/StoryBook"
    },
    {
      "displayName": "Navigation",
      "description": "Navigation system",
      "path": "Samples~/Navigation"
    },
    {
      "displayName": "MVVM",
      "description": "Example that showcases the MVVM pattern with dependency injection",
      "path": "Samples~/MVVM"
    },
    {
      "displayName": "Redux",
      "description": "Example of state management with Redux",
      "path": "Samples~/Redux"
    },
    {
      "displayName": "MVVM And Redux",
      "description": "Example that showcases the MVVM pattern with dependency injection and state management with Redux",
      "path": "Samples~/MVVM And Redux"
    },
    {
      "displayName": "UndoRedo",
      "description": "Example of undo/redo system",
      "path": "Samples~/UndoRedo"
    },
    {
      "displayName": "Trackpad",
      "description": "Example of Trackpad gesture recognition",
      "path": "Samples~/Trackpad"
    }
  ],
  "_upm": {
    "changelog": "### Removed\n\n- Removed the `margin` property from the Tray component.\n- Removed the `size` property of the `Tray` component. The Tray component will fit its content in the screen automatically and doen't need anymore any specific size to be set.\n- Removed the `expandable` property from the Tray component. A Tray component is should not be expandable by definition. If you are willing to have some scrollable content inside a Tray component, a new component called ScrollableTray will be avilable in future release of App UI.\n\n### Fixed\n\n- Fixed styling on BottomNavBar items\n- Fixed refresh of the `ActionGroup` component\n- Fixed Tooltip maximum size\n\n### Added\n\n- Added monitoring of AccordionItem content size to make AccordionItem fit its content when it is already open.\n\n### Changed\n\n- Use the ConditionalWeakTable for new releases of Unity where a fix from IL2CPP has landed."
  },
  "upmCi": {
    "footprint": "bc381a620142d39b193bac20eb1d304be4cf0b4c"
  },
  "documentationUrl": "https://docs.unity3d.com/Packages/com.unity.dt.app-ui@1.0/manual/index.html"
}
